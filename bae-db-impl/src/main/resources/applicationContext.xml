<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

  <bean id="propertyConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location">
      <value>classpath:datasource.properties</value>
    </property>
  </bean>

  <!-- BoneCP configuration 
  <bean id="mainDataSource" class="com.jolbox.bonecp.BoneCPDataSource" depends-on="propertyConfigurer"
    destroy-method="close">
    <property name="driverClass" value="${jdbc.driverClassName}" />
    <property name="jdbcUrl" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />

    <property name="idleConnectionTestPeriodInMinutes" value="60" />
    <property name="idleMaxAgeInMinutes" value="240" />

    <property name="maxConnectionsPerPartition" value="30" />
    <property name="minConnectionsPerPartition" value="10" />
    <property name="partitionCount" value="3" />
    <property name="acquireIncrement" value="5" />
    <property name="statementsCacheSize" value="0" />
        
    <property name="logStatementsEnabled" value="true" />
  </bean>
  -->
  <!-- Spring bean configuration. Tell Spring to bounce off BoneCP -->
  <!-- 20121226 luke 使用JNDI設定的JDBC
  <bean id="jndiDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiName">
      <value>java:/comp/env/jdbc/school01</value>
    </property>
  </bean>

  <bean id="finalDataSource"
    class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
    <property name="targetDataSource">
      <ref local="jndiDataSource" />
    </property>
  </bean>
  -->
  

  <!-- Spring bean configuration. Tell Spring to bounce off BoneCP 
  <bean id="finalDataSource"
    class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
    <property name="targetDataSource">
      <ref local="mainDataSource" />
    </property>
  </bean>
  -->

  <!--
  <bean id="mainDataSource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource"
    depends-on="propertyConfigurer">
    <property name="driverClassName" value="${jdbc.driverClassName}" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
  </bean>
  -->
  <!-- Proxool configuration
  -->
  <bean id="finalDataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
    <property name="delegateProperties">
      <value>user=${jdbc.username},password=${jdbc.password}</value>
    </property>

    <property name="driver-class" value="${jdbc.driverClassName}" />
    <property name="driver-url" value="${jdbc.url}" />
    <property name="user" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    <property name="alias" value="db01" />
    <property name="houseKeepingSleepTime" value="30000" />
    <property name="prototypeCount" value="5" />
    <property name="maximumConnectionCount" value="100" />
    <property name="minimumConnectionCount" value="10" />
    <property name="trace" value="false" />
    <property name="verbose" value="false" />
  </bean>

  <!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="finalDataSource" />
	</bean>

	<!-- enable component scanning and autowire (beware that this does not enable
		mapper scanning!) -->

	<context:component-scan base-package="org.java.luke.baedb.dao, org.java.luke.baedb.service" />


	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="finalDataSource" />
		<!-- <property name="typeAliasesPackage" value="tw.alle.rd.db.library.model"
			/> <property name="mapperLocations" value="classpath*:test/dao/**/*.xml"
			/> -->
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.java.luke.baedb.dao" />
		<!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"
			/> -->
		<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
	</bean>

	<!-- SqlSessionFactory property is autowired -->
	<!-- <bean id="driverMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="test.dao.BusmgtBsDriverMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> </bean> -->

</beans>
